name: duckdb-musl-release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g. 1.1.3)'
        required: true

env:
  ARTIFACT_RETENTION_DAYS: '3'

jobs:
  build:
    name: Build duckdb ${{ matrix.config.arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
              arch: x86,
              musl_cross_target: i686-linux-musl,
              duckdb_platform: linux_i686_musl
            }
          - {
              arch: x86_64,
              musl_cross_target: x86_64-linux-musl,
              duckdb_platform: linux_amd64_musl
            }
          - {
              arch: arm,
              musl_cross_target: armv6-linux-musleabihf,
              duckdb_platform: linux_arm_musl
            }
          - {
              arch: arm64,
              musl_cross_target: aarch64-linux-musl,
              duckdb_platform: linux_arm64_musl
            }
    container:
      image: quay.io/bitsaver/musl-cross:${{ matrix.config.musl_cross_target }}-latest
      options: -v ${{ github.workspace }}:/worker --cap-add SYS_ADMIN --device /dev/fuse --security-opt apparmor:unconfined -e DUCKDB_PLATFORM=${{ matrix.config.duckdb_platform }}
    steps:
      - name: Checkout DuckDB Source Code
        uses: actions/checkout@v4
        with:
          repository: 'duckdb/duckdb'
          ref: 'v${{ github.event.inputs.version }}'
          fetch-depth: 1
          path: ./

      - name: Install Build Tools
        run: |
          apk add git cmake ninja make tar coreutils binutils

      # https://duckdb.org/docs/stable/core_extensions/overview
      # -DCORE_EXTENSIONS='autocomplete;httpfs;icu;json;tpch;delta;parquet'
      - name: Build DuckDB
        env:
          ARCH: ${{ matrix.config.arch }}
        run: |
          mkdir -p /worker/build/release
          cd /worker/build/release
          cmake -G "Ninja" -DCORE_EXTENSIONS="autocomplete;core_functions;parquet;json" -DBUILD_UNITTESTS=0 -DCMAKE_BUILD_TYPE=Release -DDUCKDB_EXPLICIT_PLATFORM=$DUCKDB_PLATFORM -DEXTENSION_STATIC_BUILD=1 -DOVERRIDE_GIT_DESCRIBE=v${{ github.event.inputs.version }} ../..
          ninja -j $(nproc)
          ls -la /worker/build/release
          cd /worker/build/release
          tar -czvf /worker/build/release/duckdb_${{ matrix.config.duckdb_platform }}.tar.gz duckdb

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          path: ${{ github.workspace }}/build/release/duckdb
          name: duckdb_${{ matrix.config.duckdb_platform }}
          if-no-files-found: error
          retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ github.token }}
          file: ${{ github.workspace }}/build/release/duckdb_${{ matrix.config.duckdb_platform }}.tar.gz
          tag: v${{ github.event.inputs.version }}
          file_glob: true
          release_name: 'Release DuckDB ${{ github.event.inputs.version }}'
          overwrite: true
          prerelease: false
          body: 'DuckDB, built `${{ github.event.inputs.version }}`.'
